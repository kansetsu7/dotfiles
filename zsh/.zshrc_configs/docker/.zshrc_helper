# shortcut on pointing diff compose file and using lazydocker
ld() {
  project="${1:-$(detect_pwd_project)}"
  case "$project" in
    hq)
      lazydocker -f "/current/hq/compose.yml"
      ;;
    hk|ck|sg|ave_ck)
      lazydocker -f "/current/sites/nerv_by_site_code/$project/compose.yml"
      ;;
    av)
      lazydocker -f "/current/sites/nerv_by_site_code/ave_ck/compose.yml"
      ;;
    aba)
      lazydocker -f "/current/sites/amoeba/compose.yml"
      ;;
    *)
      if [[ -f "/current/sites/$project/compose.yml" ]]; then
        lazydocker -f "/current/sites/$project/compose.yml"
      else
        lazydocker
      fi
      ;;
  esac
}

# match $PWD with project name, and remove `nerv_` prefix
detect_pwd_project(){
  pattern="(nerv_hk|nerv_ck|nerv_sg|nerv_ave_ck|amoeba|angel|cam)"
  [[ $PWD =~ $pattern ]] && project=$match[1] && echo ${project#nerv_}
}

# get amoeba site
get_amoeba_site(){
  echo $(docker compose -f /current/sites/amoeba/compose.yml run --rm amoeba bundle exec thor setup:site | awk '{print $4}')
}

# detect project and pass it to dump_db script. Handle amoeba site as well.
dump_db() {
  project=$(detect_pwd_project)
  case $project in
    hk|ck|sg|ave_ck)
      /current/edit/scripts/dump_db.sh $project $1
      ;;
    amoeba)
      site=$(get_amoeba_site)
      echo "dump db for $site"
      /current/edit/scripts/dump_db_amoeba.sh $site $1
      ;;
    *)
      echo "invalid!"
      ;;
  esac
}
